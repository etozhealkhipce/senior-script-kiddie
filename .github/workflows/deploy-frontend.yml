name: Release

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: SETUP GIT
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "<>"

      - name: CHECKOUT
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: LOGIN TO GITHUB CONTAINER REGISTRY
        run: docker login ${{ env.REGISTRY }} -u ${{ github.repository_owner }} -p "${{ secrets.GHCR_TOKEN }}"

      - name: EXTRACT METADATA FOR DOCKER
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: BUILD AND PUSH
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: CHECKOUT
        uses: actions/checkout@v4

      - name: COPY FILES
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "k3s/*"
          target: "/tmp/k3s-deploy-frontend"
          strip_components: 1

      - name: DEPLOY
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "CHECKING kubectl"
            if ! command -v kubectl &> /dev/null; then
                echo "kubectl NOT FOUND"
                exit 1
            fi

            cd /tmp/k3s-deploy-frontend

            echo "CREATING IMAGEPULLSECRET"
            cat >frontend-ghcr-secret.yml << EOF
            apiVersion: v1
            kind: Secret
            metadata:
              name: ghcr-secret-frontend
              namespace: sskd
            type: kubernetes.io/dockerconfigjson
            data:
              .dockerconfigjson: $(echo -n '{"auths":{"ghcr.io":{"username":"${{ github.repository_owner }}","password":"${{ secrets.GHCR_TOKEN }}","auth":"'$(echo -n "${{ github.repository_owner }}:${{ secrets.GHCR_TOKEN }}" | base64 -w 0)'"}}}'| base64 -w 0)
            EOF

            echo "APPLYING MANIFESTS"
            kubectl apply -f frontend-ghcr-secret.yml
            kubectl apply -f frontend-deployment.yml
            kubectl apply -f frontend-service.yml

            echo "WAITING FOR POD"
            kubectl rollout status deployment/sskd-frontend-deployment -n sskd --timeout=300s

            echo "DEPLOY STATUS"
            kubectl get pods -n sskd
            kubectl get services -n sskd
            kubectl get ingress -n sskd

            rm -rf /tmp/k3s-deploy-frontend

            echo "FINISHED"
